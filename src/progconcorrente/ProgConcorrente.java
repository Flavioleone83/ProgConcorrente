/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package progconcorrente;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Fl√°vio
 */
public class ProgConcorrente extends javax.swing.JFrame {

    /**
     * Creates new form ProgConcorrente
     */
    public ProgConcorrente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        seis = new javax.swing.JRadioButton();
        oito = new javax.swing.JRadioButton();
        doze = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        cem = new javax.swing.JRadioButton();
        hum = new javax.swing.JRadioButton();
        dez = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        sequencial = new javax.swing.JRadioButton();
        concorrente = new javax.swing.JRadioButton();
        iniciar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tempoGasto = new javax.swing.JLabel();
        qtdVetores = new javax.swing.JLabel();
        tamEntrada = new javax.swing.JLabel();
        tipoEscolhido = new javax.swing.JLabel();

        jLabel3.setBackground(new java.awt.Color(255, 0, 0));
        jLabel3.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Informe Quantidade de Vetores");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        seis.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(seis);
        seis.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        seis.setText("6");
        seis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seisActionPerformed(evt);
            }
        });

        oito.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(oito);
        oito.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        oito.setText("8");
        oito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oitoActionPerformed(evt);
            }
        });

        doze.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(doze);
        doze.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        doze.setText("12");
        doze.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dozeActionPerformed(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(255, 0, 0));
        jLabel7.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Informe a quantidade de vetores");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seis, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oito, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doze, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(121, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seis)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(oito)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(doze)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        cem.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup3.add(cem);
        cem.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cem.setText("100.000.000");
        cem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cemActionPerformed(evt);
            }
        });

        hum.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup3.add(hum);
        hum.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        hum.setText("1.000.000");
        hum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                humActionPerformed(evt);
            }
        });

        dez.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup3.add(dez);
        dez.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        dez.setText("10.000.000");
        dez.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dezActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 0, 0));
        jLabel4.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Informe o Tamanho da Entrada");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(hum, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dez, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cem, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(118, 118, 118))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(hum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dez)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cem)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        sequencial.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(sequencial);
        sequencial.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        sequencial.setText("Sequencial");
        sequencial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sequencialActionPerformed(evt);
            }
        });

        concorrente.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(concorrente);
        concorrente.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        concorrente.setText("Concorrente");
        concorrente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                concorrenteActionPerformed(evt);
            }
        });

        iniciar.setBackground(new java.awt.Color(204, 0, 51));
        iniciar.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        iniciar.setText("Iniciar");
        iniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(iniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(concorrente, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                    .addComponent(sequencial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(51, 51, 51))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sequencial)
                .addGap(18, 18, 18)
                .addComponent(concorrente)
                .addGap(67, 67, 67)
                .addComponent(iniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Tempo Gasto: ");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Quantidade de Vetores Criados: ");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setText("Tamanho da entrada: ");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("Tipo Escolhido: ");

        tempoGasto.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tempoGasto.setForeground(new java.awt.Color(204, 0, 51));
        tempoGasto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tempoGasto.setText("0");

        qtdVetores.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        qtdVetores.setForeground(new java.awt.Color(204, 0, 51));
        qtdVetores.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        qtdVetores.setText("0");

        tamEntrada.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tamEntrada.setForeground(new java.awt.Color(204, 0, 51));
        tamEntrada.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tamEntrada.setText("0");

        tipoEscolhido.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tipoEscolhido.setForeground(new java.awt.Color(204, 0, 51));
        tipoEscolhido.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tipoEscolhido.setText("0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tempoGasto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(qtdVetores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tamEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tipoEscolhido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tempoGasto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qtdVetores)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tamEntrada)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipoEscolhido)
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 219, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void seisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seisActionPerformed

    private void oitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oitoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_oitoActionPerformed

    private void dozeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dozeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dozeActionPerformed

    private void cemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cemActionPerformed

    private void humActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_humActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_humActionPerformed

    private void dezActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dezActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dezActionPerformed

    private void sequencialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sequencialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sequencialActionPerformed

    private void concorrenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_concorrenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_concorrenteActionPerformed

   
public static void gerarValoresGravaArquivo(String nomeArquivo, int tam){
int temp = 0;
String palavra = "";
Random valor = new Random();
int [] Vetor = new int[tam];
for(int i = 0; i < tam; i++){
    //System.out.println("Ol√° Mundo");
    temp = valor.nextInt(9999999);
    Vetor[i] = temp;
    //System.out.println(Vetor[i]);
}

File file = new File(nomeArquivo);
    if(!file.exists()){
        try {
            file.createNewFile();
        } catch (IOException ex) {
            //Logger.getLogger(SequencialProg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    FileWriter fw = null;
try {
    fw = new FileWriter(file.getAbsoluteFile());
} catch (IOException ex) {
    Logger.getLogger(ProgConcorrente.class.getName()).log(Level.SEVERE, null, ex);
}
    BufferedWriter bw = new BufferedWriter(fw);

for(int i = 0; i < tam; i++){
    //System.out.println(Vetor[i]);
    palavra = Integer.toString(Vetor[i]);
    //System.out.println(palavra);
    try {
        bw.write(palavra+"\n");        
    } catch (IOException ex) {
        Logger.getLogger(ProgConcorrente.class.getName()).log(Level.SEVERE, null, ex);
    }
}
        try {
            bw.close();
        } catch (IOException ex) {
            Logger.getLogger(ProgConcorrente.class.getName()).log(Level.SEVERE, null, ex);
        }
}

public static void lerArquivoGravarOrdenado(String nomeArquivo,int tam, int [] vetor, int c) {  
    int i = 0;
        int valor = 0;
        //int [] Vetor = new int[tam];
        String linha = "";
        FileReader ler = null;
        try {
            ler = new FileReader(nomeArquivo);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ProgConcorrente.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedReader reader = new BufferedReader(ler); 


        try {
            while( (linha = reader.readLine()) != null ){
                
                valor = Integer.parseInt(linha);
                //System.out.println(linha);
                //System.out.println(valor);
                vetor[i] = valor;
                i++;
            }           
            //for(i = 0; i < tam;i++){
                //System.out.println(vetor[i]);
            //}
            Arrays.sort(vetor);
        } catch (IOException ex) {
            Logger.getLogger(ProgConcorrente.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        nomeArquivo = "arquivoOrdenado"+c+".txt";
        File file = new File(nomeArquivo);
    if(!file.exists()){
        try {
            file.createNewFile();
        } catch (IOException ex) {
            //Logger.getLogger(SequencialProg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    FileWriter fw = null;
    try {
        fw = new FileWriter(file.getAbsoluteFile());
    } catch (IOException ex) {
        Logger.getLogger(ProgConcorrente.class.getName()).log(Level.SEVERE, null, ex);
    }
        BufferedWriter bw = new BufferedWriter(fw);

        for(i = 0; i < tam; i++){
            //System.out.println(Vetor[i]);
            linha = Integer.toString(vetor[i]);
            //System.out.println(linha);
            try {
                bw.write(linha+"\n");        
            } catch (IOException ex) {
                Logger.getLogger(ProgConcorrente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            bw.close();
        } catch (IOException ex) {
            Logger.getLogger(ProgConcorrente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void geraVetor(String nomeArquivo, int Vetor[], int tam){
        int temp = 0;
        Random valor = new Random();
        Vetor = new int[tam];
        for(int i = 0; i < tam; i++){
    //System.out.println("Ol√° Mundo");
        temp = valor.nextInt(9999999);
        Vetor[i] = temp;
    //System.out.println(Vetor[i]);
        }
    }
    
    private void gravaVetor(String nomeArquivo, int vetor[], int tam){
    String linha = "";
    int i;
    File file = new File(nomeArquivo);
    if(!file.exists()){
        try {
            file.createNewFile();
        } catch (IOException ex) {
            //Logger.getLogger(SequencialProg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    FileWriter fw = null;
    try {
        fw = new FileWriter(file.getAbsoluteFile());
    } catch (IOException ex) {
        Logger.getLogger(ProgConcorrente.class.getName()).log(Level.SEVERE, null, ex);
    }
        BufferedWriter bw = new BufferedWriter(fw);

        for(i = 0; i < tam; i++){
            //System.out.println(Vetor[i]);
            linha = Integer.toString(vetor[i]);
            //System.out.println(linha);
            try {
                bw.write(linha+"\n");        
            } catch (IOException ex) {
                Logger.getLogger(ProgConcorrente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            bw.close();
        } catch (IOException ex) {
            Logger.getLogger(ProgConcorrente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void iniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarActionPerformed
        // TODO add your handling code here:
        DadosExtraidos dados = new DadosExtraidos();
        
        if(hum.isSelected()){
            int q = 1000000;
            dados.setTamEntrada(q);
        }else if(dez.isSelected()){
            int q = 10000000;
            dados.setTamEntrada(q);
        }else{
            int q = 100000000;
            dados.setTamEntrada(q);
        }
        
        if(seis.isSelected()){
            dados.setTamVetores(6);
        }else if(oito.isSelected()){
            dados.setTamVetores(8);
        }else{
            dados.setTamVetores(12);
        }
        
        if(sequencial.isSelected()){
            long start = System.currentTimeMillis();
            //c√≥digo sequencial
            dados.setTipoProg("Sequencial");
            for(int c = 1; c <= dados.getTamVetores();c++){
                String nomeArquivo = "arquivoCriado"+ c +".txt";
                dados.setNomeArquivo(nomeArquivo);                
                gerarValoresGravaArquivo(nomeArquivo,dados.getTamEntrada());
            }
            
            for(int c = 1; c <= dados.getTamVetores();c++){
                int [] vetor = new int[dados.getTamEntrada()];
                String nomeArquivo = "arquivoCriado"+ c +".txt";
                dados.setNomeArquivo(nomeArquivo);                
                lerArquivoGravarOrdenado(nomeArquivo,dados.getTamEntrada(),vetor,c);
            }
            long tempoG = System.currentTimeMillis() - start;
            dados.setTempoGastoS(tempoG);
            String palavra = Long.toString(dados.getTempoGastoS());
            tempoGasto.setText(palavra);
        }else if(concorrente.isSelected()){    
             //c√≥digos prai aki funcionando tudo pra tras ai
             long start = System.currentTimeMillis();
            new Thread(){
                @Override
                public void run(){
                    dados.setTipoProg("concorrente");
                    int c = 1;
                    int [] vetor = new int[dados.getTamEntrada()];
                    String nomeArquivo = "arquivoCriado"+ c +".txt";
                    dados.setNomeArquivo(nomeArquivo);  
                    gerarValoresGravaArquivo(nomeArquivo,dados.getTamEntrada());
                    lerArquivoGravarOrdenado(nomeArquivo,dados.getTamEntrada(),vetor,c);
                }
            }.start();
            
            new Thread(){
                @Override
                public void run(){
                    dados.setTipoProg("concorrente");
                    dados.setTipoProg("concorrente");
                    int c = 2;
                    int [] vetor = new int[dados.getTamEntrada()];
                    String nomeArquivo = "arquivoCriado"+ c +".txt";
                    dados.setNomeArquivo(nomeArquivo);  
                    gerarValoresGravaArquivo(nomeArquivo,dados.getTamEntrada());
                    lerArquivoGravarOrdenado(nomeArquivo,dados.getTamEntrada(),vetor,c);
                }
            }.start();
            
            new Thread(){
                @Override
                public void run(){
                dados.setTipoProg("concorrente");
                int c = 3;
                int [] vetor = new int[dados.getTamEntrada()];
                String nomeArquivo = "arquivoCriado"+ c +".txt";
                dados.setNomeArquivo(nomeArquivo);  
                gerarValoresGravaArquivo(nomeArquivo,dados.getTamEntrada());
                lerArquivoGravarOrdenado(nomeArquivo,dados.getTamEntrada(),vetor,c);
                }
            }.start();
            
            new Thread(){
                @Override
                public void run(){
                dados.setTipoProg("concorrente");
                int c = 4;
                int [] vetor = new int[dados.getTamEntrada()];
                String nomeArquivo = "arquivoCriado"+ c +".txt";
                dados.setNomeArquivo(nomeArquivo);  
                gerarValoresGravaArquivo(nomeArquivo,dados.getTamEntrada());
                lerArquivoGravarOrdenado(nomeArquivo,dados.getTamEntrada(),vetor,c);  
                }
            }.start();
            
            new Thread(){
                @Override
                public void run(){
                dados.setTipoProg("concorrente");
                int c = 5;
                int [] vetor = new int[dados.getTamEntrada()];
                String nomeArquivo = "arquivoCriado"+ c +".txt";
                dados.setNomeArquivo(nomeArquivo);  
                gerarValoresGravaArquivo(nomeArquivo,dados.getTamEntrada());
                lerArquivoGravarOrdenado(nomeArquivo,dados.getTamEntrada(),vetor,c);    
                }
            }.start();
            
            new Thread(){
                @Override
                public void run(){
                dados.setTipoProg("concorrente");
                int c = 6;
                int [] vetor = new int[dados.getTamEntrada()];
                String nomeArquivo = "arquivoCriado"+ c +".txt";
                dados.setNomeArquivo(nomeArquivo);  
                gerarValoresGravaArquivo(nomeArquivo,dados.getTamEntrada());
                lerArquivoGravarOrdenado(nomeArquivo,dados.getTamEntrada(),vetor,c);
                    
                }
            }.start();
            
            long tempoG = System.currentTimeMillis() - start;
            dados.setTempoGastoC(tempoG);
            String palavra = Long.toString(dados.getTempoGastoC());
            tempoGasto.setText(palavra);
        }else{
            long start = System.currentTimeMillis();
            //c√≥digo paralelo
            System.out.println("Paralelo");
            dados.setTipoProg("Paralelo");
            System.out.println("Tamanho da enrada: " + dados.getTamEntrada());
            System.out.println("Quantidade de vetores: " + dados.getTamVetores());
            System.out.println("Tipo de programa: " + dados.getTipoProg());
            long tempoG = System.currentTimeMillis() - start;
            dados.setTempoGastoD(tempoG);
            String palavra = Long.toString(dados.getTempoGastoD());
            tempoGasto.setText(palavra);
        }
        
        String palavra = Integer.toString(dados.getTamVetores());
        qtdVetores.setText(palavra);
        palavra = Integer.toString(dados.getTamEntrada());
        tamEntrada.setText(palavra);
        
        palavra = dados.getTipoProg();
        tipoEscolhido.setText(palavra);
        
    }//GEN-LAST:event_iniciarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProgConcorrente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProgConcorrente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProgConcorrente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProgConcorrente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProgConcorrente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.JRadioButton cem;
    private javax.swing.JRadioButton concorrente;
    private javax.swing.JRadioButton dez;
    private javax.swing.JRadioButton doze;
    private javax.swing.JRadioButton hum;
    private javax.swing.JButton iniciar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton oito;
    private javax.swing.JLabel qtdVetores;
    private javax.swing.JRadioButton seis;
    private javax.swing.JRadioButton sequencial;
    private javax.swing.JLabel tamEntrada;
    private javax.swing.JLabel tempoGasto;
    private javax.swing.JLabel tipoEscolhido;
    // End of variables declaration//GEN-END:variables

}
